#
# This properties file contains configuration information for each local
# box before constructing configuration manager
#

#==============================================================================
# Default properties
#==============================================================================
default.organization=hp.com

#==============================================================================
# custom log4j properties, it controls the logging outputs
#==============================================================================
log4j.category.com.hp=INFO
log4j.category.com.hp.platform=INFO
log4j.category.com.hp.dal=INFO
log4j.category.com.hp.report=INFO
log4j.category.com.danga.MemCached=WARN


# The Syslog appender's target host, if not specified, use localhost as default value
log4j.appender.Syslog.SyslogHost=@SYSLOGHOST@

#==============================================================================
# for the proxy in apache-tomcat
#==============================================================================
proxy.ServerHost=@APPSERVERHOSTNAME@
proxy.ServerPort=@APPSERVERHOSTPORT@
proxy.Trace=true
proxy.UseGzip=true

#==============================================================================
# appconfig.properties
#==============================================================================
#'/' stands for APP_HOME
app.properties.path=/
#used in PropReader.java, 'true' stands for use the path specified instead of path in 4-tuple namespace:key:level1:level2
app.properties.path.enable=true


# turns single-sign-on in or off. Default is false.
#proxy.UseSSO=@USE_SSO@

# the channel name used by JavaGroups.  since all hosts in the LAN will receive
# messages from the same multicast address, we use this to partition clusters
# if not defined, the process is assumed to be running stand alone and is by
# default the master.
#appsvr.group.name=@PARTITIONNAME@
appsvr.group.name=LOCALHOST

#==============================================================================
# CONFIGURATION SERVER PARAMETERS
#==============================================================================
# path to an independent configuration directory.
# set to platform_home in a single box deployment.
# use class path as default if not specified.
track.config.home=@BASE_CONFIG_HOME@

# the group to which the config server bean belongs.
# Only one server for each group is active at any point in time.
# Use the value 'none' if this is the only server in the group.
cfg.group.name=none

#============================================================================== 
# FOR JMS-based updates

# this is the JNDI name of the topic connection factory to use.
cfg.update.jms.factory=TopicConnectionFactory

# this is the name of the topic to use. Default value is 'ConfigUpdate'
cfg.update.jms.topic=@PARTITIONNAME@.ConfigUpdate

# RMI service port for configuration
cfg.rmi.port=1099

# Defines whether this app can act as a config server or not.
# Set the value to 'true' to make it a config server, 'false'
# if not. Default is false
cfg.server=@ISCFGSERVER@

# Defines whether config server should have its own cache
# or not. Default is 'false', sset to 'true' to enable cache
cfg.cache.enable=true

# Defines the size of the config server's cache.
# Default is 30 entries
cfg.cache.size=30

#==============================================================================
# defines the JMS provider, valid values are "activemq", "jbossmq", and "sonicmq".
# "activemq" is the default
#==============================================================================
jms.provider=@JMS_PROVIDER@

#local cfg, don't hit AppServer unless forced
app.localcfg=true